% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{fit_glmpca_binom}
\alias{fit_glmpca_binom}
\title{Fit Binomial GLM-PCA Model to Count Data}
\usage{
fit_glmpca_binom(
  Y,
  N,
  K,
  fit0,
  tol = 1e-04,
  min_iter = 1,
  max_iter = 100,
  control = list()
)
}
\arguments{
\item{Y}{The n x p matrix of counts; all entries of Y should be
non-negative.}

\item{N}{The n x p matrix of trials; all entries of N should be
at least 1.}

\item{K}{An integer 1 or greater giving the matrix rank. This
argument will be ignored if the initial fit
(\code{fit0}) is provided.}

\item{fit0}{The initial model fit. It should be an object of class
\dQuote{glmpca_fit}, such as an output from \code{init_glmpca_pois}, 
or from a previous call to \code{fit_glmpca_pois}.}

\item{tol}{Positive scalar determining relative tolerance for assessing convergence.
Convergence is determined by comparing the log-likelihood at the previous
iteration to the current iteration.}

\item{min_iter}{Minimum number of updates to \eqn{L} and \eqn{F} to be run.}

\item{max_iter}{Maximum number of updates to \eqn{L} and \eqn{F} to be run.}

\item{control}{List of control parameters to modify behavior of model fitting.}

\item{verbose}{String indicating level of printing to be done during model fitting.
\code{"likelihood"} will print only the log-likelihood at each step, where
\code{"detailed"} will print information about the change in parameter values at each
step.}

\item{algorithm}{String determining algorithm to use for updating \eqn{L} and \eqn{F}}
}
\value{
An object capturing the final state of the model fit.
}
\description{
Fit a binomial GLM-PCA model to input matrices \code{Y} and \code{N}
  by maximum likelihood.
}
\details{
In generalized principal component analysis (GLM-PCA)
based on a Binomial likelihood (Townes et al, 2019), the counts
\eqn{y_{ij}} in the n x p matrix \eqn{Y} are modeled as
\deqn{y_{ij} \sim Binomial(n_{ij}, p_{ij}).} The logit of each
binomial probability is defined as a linear combination of the parameters:
\deqn{logit p_{ij} = \sum_{k=1}^K l_{ki} f_{kj} = (L'F)_{ij}.} The model
parameters are stored as an K x n matrix \eqn{L} with entries
\eqn{l_{jk}} and an K x p matrix \eqn{F} with entries \eqn{f_{ik}}.
\eqn{K} is a tuning parameter specifying the rank of the matrices
\eqn{L} and \eqn{F}. \code{fit_glmpca_binom} computes maximum-likelihood
estimates (MLEs) of \eqn{L} and \eqn{F}.

The \code{control} argument is a list in which any of the following
named components will override the default optimization algorithm
settings (as they are defined by \code{fit_glmpca_control_default}):

\describe{

\item{\code{num_iter}}{Number of updates to be made to parameters
  at each outer iteration of the algorithm.}

\item{\code{line_search}}{Boolean indicating if backtracking line search
  should be performed. Only used if \code{algorithm} is set to \code{"ccd"}.}

\item{\code{alpha}}{alpha value of line search between 0 and .5. 
  Only used if \code{algorithm} is set to \code{"ccd"}.}

\item{\code{beta}}{beta value of line search between 0 and .5. 
  Only used if \code{algorithm} is set to \code{"ccd"}.}}
}
\examples{
set.seed(1)

n <- 300
p <- 100
K <- 2

LL <- matrix(
  data = rnorm(K * n, sd = 1),
  nrow = K,
  ncol = n
)

FF <- matrix(
  data = rnorm(K * p, sd = 1),
  nrow = K,
  ncol = p
)

H <- crossprod(LL, FF)

prob <- exp(H) / (1 + exp(H))

N <- matrix(
  data = 1 + rpois(n * p, lambda = 5),
  nrow = n, 
  ncol = p
)

Y <- matrix(
data = rbinom(
    n * p,
    size = as.vector(N),
    prob = as.vector(prob)
  ),
  nrow = n,
  ncol = p
)


fit0 <- init_glmpca_binom(
  Y = Y,
  K = 2
)

final_fit <- fit_glmpca_binom(
 Y = Y, 
 N = N,
 fit0 = fit0,
 max_iter = 25
)

}
\references{
Townes, F. W., Hicks, S. C., Aryee, M. J. and Irizarry,
R. A. (2019). Feature selection and dimension reduction for
single-cell RNA-Seq based on a multinomial model. \emph{Genome Biology}
\bold{20}, 295. \url{https://doi.org/10.1186/s13059-019-1861-6}

Collins, M., Dasgupta, S. and Schapire, R. E. (2002). A
generalization of principal components analysis to the exponential
family. In \emph{Advances in Neural Information Processing Systems} 14.
}
