// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// update_factors_faster_parallel
void update_factors_faster_parallel(const arma::mat& L_T, arma::mat& FF, const arma::mat& M, const std::vector<int> update_indices, unsigned int num_iter, bool line_search, double alpha, double beta);
RcppExport SEXP _fastglmpca_update_factors_faster_parallel(SEXP L_TSEXP, SEXP FFSEXP, SEXP MSEXP, SEXP update_indicesSEXP, SEXP num_iterSEXP, SEXP line_searchSEXP, SEXP alphaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type L_T(L_TSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type FF(FFSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const std::vector<int> >::type update_indices(update_indicesSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< bool >::type line_search(line_searchSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    update_factors_faster_parallel(L_T, FF, M, update_indices, num_iter, line_search, alpha, beta);
    return R_NilValue;
END_RCPP
}
// lik_glmpca_pois_log_sp
double lik_glmpca_pois_log_sp(const arma::sp_mat& Y, const arma::mat& L, const arma::mat& F, double loglik_const);
RcppExport SEXP _fastglmpca_lik_glmpca_pois_log_sp(SEXP YSEXP, SEXP LSEXP, SEXP FSEXP, SEXP loglik_constSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type F(FSEXP);
    Rcpp::traits::input_parameter< double >::type loglik_const(loglik_constSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_glmpca_pois_log_sp(Y, L, F, loglik_const));
    return rcpp_result_gen;
END_RCPP
}
// deriv_prod
arma::mat deriv_prod(const arma::mat& L, const arma::mat& F);
RcppExport SEXP _fastglmpca_deriv_prod(SEXP LSEXP, SEXP FSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type F(FSEXP);
    rcpp_result_gen = Rcpp::wrap(deriv_prod(L, F));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fastglmpca_update_factors_faster_parallel", (DL_FUNC) &_fastglmpca_update_factors_faster_parallel, 8},
    {"_fastglmpca_lik_glmpca_pois_log_sp", (DL_FUNC) &_fastglmpca_lik_glmpca_pois_log_sp, 4},
    {"_fastglmpca_deriv_prod", (DL_FUNC) &_fastglmpca_deriv_prod, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_fastglmpca(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
